public final static boolean showConfirmDialogWithTimeout(Object params, String title, int timeout_ms) {
    final JOptionPane msg = new JOptionPane(params, JOptionPane.WARNING_MESSAGE, JOptionPane.CANCEL_OPTION);
    final JDialog dlg = msg.createDialog(title);

    msg.setInitialSelectionValue(JOptionPane.OK_OPTION);
    dlg.setAlwaysOnTop(true);
    dlg.setDefaultCloseOperation(JDialog.DO_NOTHING_ON_CLOSE);
    dlg.addComponentListener(new ComponentAdapter() {
        @Override
        public void componentShown(ComponentEvent e) {
            super.componentShown(e);
            final Timer t = new Timer(timeout_ms, new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    dlg.setVisible(false);
                }

            });
            t.start();
        }
    });
    dlg.setVisible(true);

    Object selectedvalue = msg.getValue();
    if (selectedvalue.equals(JOptionPane.CANCEL_OPTION)) {
        return false;
    } else {
        return true;
    }
}

    // example usage
    String message = "The earth will explode in 10 seconds. Select CANCEL if you won't.";
    JLabel lbmsg = new JLabel(message);
    boolean result = showConfirmDialogWithTimeout(lbmsg, "Shutdown Warning", 10 * 1000);

    if (result == false) {
        Utils.showMessage(message + " cancel is selected");
    }
    else {
        Utils.showMessage(message + " timeout or okay is selected");
    }
